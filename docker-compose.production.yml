version: "3.8"

services:
  # Main application
  quiz-agent:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: solvium-quiz-agent
    environment:
      # Core Configuration
      - ENVIRONMENT=production
      - BOT_USERNAME=${BOT_USERNAME}

      # Telegram Configuration
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - USE_FASTAPI_WEBHOOK=${USE_FASTAPI_WEBHOOK:-True}

      # FastAPI Configuration
      - FASTAPI_HOST=${FASTAPI_HOST:-0.0.0.0}
      - FASTAPI_PORT=${FASTAPI_PORT:-8000}
      - FASTAPI_RELOAD=${FASTAPI_RELOAD:-false}
      - FASTAPI_WORKERS=${FASTAPI_WORKERS:-6}

      # Database Configuration (External)
      - DATABASE_URL=${DATABASE_URL}

      # Redis Configuration (External)
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_SSL=${REDIS_SSL:-true}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      # API Keys
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}

      # NEAR Blockchain Configuration
      - NEAR_RPC_ENDPOINT=${NEAR_RPC_ENDPOINT}
      - NEAR_RPC_ENDPOINT_TRANS=${NEAR_RPC_ENDPOINT_TRANS}
      - NEAR_WALLET_ADDRESS=${NEAR_WALLET_ADDRESS}
      - NEAR_WALLET_PRIVATE_KEY=${NEAR_WALLET_PRIVATE_KEY}
      - ENABLE_NEAR_MAINNET=${ENABLE_NEAR_MAINNET:-True}
      - WALLET_ENCRYPTION_KEY=${WALLET_ENCRYPTION_KEY}

      # Cache Configuration
      - QUIZ_CACHE_TTL=${QUIZ_CACHE_TTL:-3600}
      - SEARCH_CACHE_TTL=${SEARCH_CACHE_TTL:-1800}
      - MAX_SEARCH_RESULTS=${MAX_SEARCH_RESULTS:-8}

      # Security
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs:rw
      - ./data:/app/data:rw
    networks:
      - quiz-network
    # No depends_on since external services are used
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "2.0"
        reservations:
          memory: 512M
          cpus: "0.5"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: solvium-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./.htpasswd:/etc/nginx/.htpasswd:ro
      - ./logs/nginx:/var/log/nginx:rw
    depends_on:
      - quiz-agent
    networks:
      - quiz-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.2"

  # Monitoring and Logging
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: solvium-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - quiz-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.3"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: solvium-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - quiz-network
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.3"

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  quiz-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
